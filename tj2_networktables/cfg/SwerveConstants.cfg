#!/usr/bin/env python3
PACKAGE = "tj2_networktables"

from dynamic_reconfigure.parameter_generator_catkin import *

exit_codes = []
def set_exit(exit_code):
    global exit_codes
    if exit_code is None:
        exit_code = 0
    exit_codes.append(exit_code)

def get_level():
    return 0

gen = ParameterGenerator()
gen.add("locationX", double_t, get_level(), "Module x position (meters)", 0.0, 0.0, 10.0)
gen.add("locationY", double_t, get_level(), "Module y position (meters)", 0.0, 0.0, 10.0)
gen.add("wheelDiameter", double_t, get_level(), "Module wheel diameter (meters)", 0.0, 0.0, 1.0)
set_exit(gen.generate(PACKAGE, "tj2_networktables", "ModuleConstants"))


for name in ("AzimuthController", "WheelController"):
    gen = ParameterGenerator()
    gen.add("kP", double_t, get_level(), "", 10.0, 0.0, 100.0)
    gen.add("kI", double_t, get_level(), "", 0.0, 0.0, 100.0)
    gen.add("kD", double_t, get_level(), "", 0.0, 0.0, 100.0)
    gen.add("kF", double_t, get_level(), "", 0.0, 0.0, 100.0)
    gen.add("iMax", double_t, get_level(), "", 0.0, 0.0, 1000.0)
    gen.add("iZone", double_t, get_level(), "", 0.0, 0.0, 1000.0)
    gen.add("maxAcceleration", double_t, get_level(), "", 1080.0, 0.0, 2000.0)
    gen.add("maxSpeed", double_t, get_level(), "", 1440.0, 0.0, 2000.0)
    gen.add("tolerance", double_t, get_level(), "", 0.0, 0.0, 100.0)
    set_exit(gen.generate(PACKAGE, "tj2_networktables", name + "Constants"))

gen = ParameterGenerator()
gen.add("inverted", bool_t, get_level(), "", False)
gen.add("maxSpeed", double_t, get_level(), "", 0.0, 0.0, 1000.0)
set_exit(gen.generate(PACKAGE, "tj2_networktables", "MotorConstants"))


gen = ParameterGenerator()
gen.add("inverted", bool_t, get_level(), "", False)
gen.add("offset", double_t, get_level(), "", 0.0, -360.0, 360.0)
gen.add("ratio", double_t, get_level(), "", 0.0, 0.0, 1.0)
set_exit(gen.generate(PACKAGE, "tj2_networktables", "SensorConstants"))

exit(max(exit_codes))
